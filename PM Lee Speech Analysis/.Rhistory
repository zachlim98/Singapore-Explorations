geom_bar(stat="identity") +
facet_grid(date~., scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(panel.spacing.x=unit(1, "lines"),panel.spacing.y=unit(1, "lines"))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_grid(.~date, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(panel.spacing.x=unit(1, "lines"),panel.spacing.y=unit(1, "lines"))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_grid(.~date, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_grid(.~date, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=70, hjust=1))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=70, hjust=1))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(text = element_text(size=15),
axis.text.x = element_text(angle=70, hjust=1))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(text = element_text(size=15),
axis.text.x = element_text(angle=0, hjust=1))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_classic() +
theme(text = element_text(size=15),
axis.text.x = element_text(angle=0))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(text = element_text(size=15),
axis.text.x = element_text(angle=0))
library(ggthemes)
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(text = element_text(size=15),
axis.text.x = element_text(angle=0))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist()
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
theme_economist() +
scale_fill_economist(guide=False)
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
theme_economist() +
scale_fill_economist()
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="blue" ), guide = FALSE ) +
theme_economist() +
#use regex to extract words of interest
word_series <- binded_words %>%
mutate(word = stri_extract(word, regex = "covid|vaccine|virus|singapore")) %>% na.omit() %>%
count(date, word)
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="blue" ), guide = FALSE ) +
theme_economist()
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist()
theme(plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,30,0))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,30,0)))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,30,0)))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,30,0)),
panel.margin.x=unit(1, "lines") , panel.margin.y=unit(1,"lines"))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,20,0)),
panel.margin.x=unit(1, "lines") , panel.margin.y=unit(1,"lines"))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,10,0)),
panel.margin.x=unit(1, "lines") , panel.margin.y=unit(1,"lines"))
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist() +
theme(axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,10,0)),
panel.margin.x=unit(1, "lines") , panel.margin.y=unit(3,"lines"))
#use regex to extract words of interest
word_series <- binded_words %>%
mutate(word = stri_extract(word, regex = "covid|vaccine|virus|singapore")) %>% na.omit() %>%
count(date, word)
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count") +
theme_minimal() +
geom_line(size=1)
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count") +
theme_economist() +
geom_line(size=1)
#plot graph using "reorder_within" to get bars to line up nicely
count_words %>% ggplot(aes(y=proportion, x=reorder_within(word,-proportion,date), fill=tohigh)) +
scale_x_reordered() +
geom_bar(stat="identity") +
facet_wrap(~date, ncol=2, scales="free", labeller = labeller(date = date.labs)) +
labs(title = "Top Words used by PM Lee in Speeches", x="", y="Proportion Used") +
scale_fill_manual(values = c( "Yes"="tomato", "No"="lightblue" ), guide = FALSE ) +
theme_economist(dkpanel = TRUE) +
theme(axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
plot.title = element_text(family = "sans", size = 18, margin=margin(0,0,10,0)),
panel.margin.x=unit(1, "lines") , panel.margin.y=unit(3,"lines"))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count") +
theme_economist(base_size = 15) +
geom_line(size=1)
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "bottom")
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right")
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", legend.title = "Words")
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", legend.title = element_text(size=15))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech", x="Date",y="Count", color="Word") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", legend.title = element_text(size=15))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech from Feb - Dec", x="Date",y="Count", color="Word") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", legend.title = element_text(size=15))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech from Feb - Dec", x="Date",y="Count", color="Word") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
legend.title = element_text(size=15))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech from Feb - Dec", x="Date",y="Count", color="Word") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
legend.title = element_text(size=15))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech from Feb - Dec", x="Date",y="Count", color="Word") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(0,0,30,0)),
legend.title = element_text(size=15))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech from Feb - Dec", x="Date",y="Count", color="Word") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(0,0,0,30)),
legend.title = element_text(size=15))
#plot graph over time of change in the count of words selected
word_series %>% ggplot(aes(y=n, x=date, color=word)) +
labs(title="Change in words used in speech from Feb - Dec", x="Date",y="Count", color="Word") +
theme_economist(base_size = 15) +
geom_line(size=1) +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(30,0,0,0)),
legend.title = element_text(size=15))
#quick sentiment analysis of each speech
sentiment_words %>% binded_words %>% inner_join(get_sentiments("bing"))
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing"))
View(sentiment_words)
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment)
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment) %>%
summarise(Frequency = sum(sentiment))
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment) %>%
summarise(sentiment = sum(sentiment))
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment) %>%
summarise(across(everything(), sum))
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment)
sentiment_sum <- tapply(sentiment_words$date, sentiment_words$sentiment, FUN=sum)
sentiment_sum <- tapply(sentiment_words$sentiment, sentiment_words$date, FUN=sum)
sentiment_words
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment)
aggregate(x = sentiment_words$sentiment,
by = list(sentiment_words$date),
FUN = sum)
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=date)) +
geom_bar()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=date)) +
geom_bar(stat="identity")
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date))) +
geom_bar(stat="identity")
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date))) +
geom_bar(stat="identity") +
theme_economist(base_size = 15)
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date))) +
geom_bar(stat="identity") +
theme_economist(base_size = 15) +
scale_fill_economist()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date))) +
geom_bar(stat="identity") +
theme_economist(base_size = 15) +
scale_color_economist()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date), color=date)) +
geom_bar(stat="identity") +
theme_economist(base_size = 15) +
scale_color_economist()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date), fill=date)) +
geom_bar(stat="identity") +
theme_economist(base_size = 15) +
scale_color_economist()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date), fill=sentiment)) +
geom_bar(stat="identity") +
theme_economist(base_size = 15) +
scale_color_economist()
theme_economist(base_size = 15) +
scale_color_economist()
theme_economist(base_size = 15)
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist() +
scale_x_date(date_labels = "%b/%d")
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=date, fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist() +
scale_x_date(date_labels = "%b/%d")
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist()
View(sentiment_words)
format(sentiment_words$date, "%m-%d")
format(sentiment_words$date, "%d-%m")
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
mutate(newdate = format(date, "%d-%m"))
View(sentiment_words)
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
mutate(newdate = format(date, "%d/%m"))
#quick sentiment analysis of each speech
sentiment_words <- binded_words %>% inner_join(get_sentiments("bing")) %>%
group_by(date) %>%
count(sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
mutate(newdate = format(date, "%d %b"))
View(sentiment_words)
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(date), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(newdate), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist()
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(newdate), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist() +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(30,0,0,0)),
legend.title = element_text(size=15))
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=newdate, fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist() +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(30,0,0,0)),
legend.title = element_text(size=15))
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(newdate), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist() +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(30,0,0,0)),
legend.title = element_text(size=15))
#plot out sentiments
sentiment_words %>% ggplot(aes(y=sentiment, x=factor(newdate, levels = newdate), fill=sentiment)) +
geom_bar(stat="identity") +
labs(title="Change in sentiment over time", x="Date", y="Sentiment", fill="Sentiment Score") +
theme_economist(base_size = 15) +
scale_color_economist() +
theme(legend.position = "right", axis.title.y = element_text(family = "sans", size = 15, margin=margin(0,30,0,0)),
axis.title.x = element_text(family = "sans", size = 15, margin=margin(30,0,0,0)),
legend.title = element_text(size=15))
